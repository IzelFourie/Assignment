# Code Book
This document describes the code inside assignment submission.R.

The code is splitted by headings in sections:
* Downloading data
* Reading data
* Editing data
* Analyzing data

## Downloading data
Downloads the given url ("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
) to the given destination file: "mydataset.zip".
Unzip the mydataset zip file.
list.files() shows the file that was unzipped and downloaded to the working directory:
UCI HAR Dataset
calling list.files(UCI HAR Dataset) lists the files in the UCI HAR Dataset.
The README file in the UCI HAR Dataset states the files of interest for this exercise.

## Reading data
### Train and test data
Give the working directory from where to extract the data files.
Read the dataset files from UCI HAR by read.table of which the output are data.frames.
The data.frames are saved to objects:
train_set <- read.table("./train/X_train.txt")           # the training dataset
train_subject <- read.table("./train/subject_train.txt") # participants/subjects for each observation
train_labl <- read.table("./train/y_train.txt")          # labels for the different types of activities

The test dataset is read in as above:
reads test data.frame to test_set,
the subject data.frame to test_subject and
the activity labels data.frame to test_labl.

The train_set and test_set data.frames contain the different variables as columns. The variables are referred to as features.
A list and information on the different features is given in the UCI HAR Data file: features_info.txt 
The train_subject and test_subject data.frames show the subject for each observation in the train_set and test_set respectively.
train_labl and test_labl data.frames give the type of activity for each observation as labels/IDs (later called activityID in the clean data.frame).
Thus the activityID that corresponds to each observation in train_set and test_set.

### Features and activities
act_labl <- read.table("activity_labels.txt")
features <- read.table("features.txt")





Read dataset files from UCI HAR to given name and prefix. Know names are "train" and "test". Known prefixes are "X", "y" and "subject".
Examples:
UCI HAR Dataset/train/X_train.txt
UCI HAR Dataset/train/y_train.txt
UCI HAR Dataset/train/subject_train.txt
loadUciHarData
Loads data, labels and subjects from UCI HAR dataset to a data.frame. The returned data.frame contains a column Activity with labels integer codes, a column Subject with subjects integer codes and all other columns from data.
Constants
Some fixed values like dataDir, outputDir and outputFile used in the other parts of the code.
Downloading and loading data
Downloads the UCI HAR zip file if it doesn't exist
Reads the activity labels to activityLabels
Reads the column names of data (a.k.a. features) to features
Reads the test data.frame to testData
Reads the trainning data.frame to trainningData
Manipulating data
Merges test data and trainning data to allData
Indentifies the mean and std columns (plus Activity and Subject) to meanAndStdCols
Extracts a new data.frame (called meanAndStdData) with only those columns from meanAndStdCols.
Summarizes meanAndStdData calculating the average for each column for each activity/subject pair to meanAndStdAverages.
Transforms the column Activity into a factor.
Uses activityLabels to name levels of Activity factor.
At this point the final data frame meanAndStdAverages looks like this:
> head(meanAndStdAverages[, 1:5], n=3)
  Activity Subject tBodyAcc.mean...X tBodyAcc.mean...Y tBodyAcc.mean...Z
1  WALKING       1         0.2773308       -0.01738382        -0.1111481
2  WALKING       2         0.2764266       -0.01859492        -0.1055004
3  WALKING       3         0.2755675       -0.01717678        -0.1126749
Writing final data to CSV
Creates the output dir if it doesn't exist and writes meanAndStdAverages data frame to  the ouputfile.
